1、开发内容
	
	淘宝网首页
	
	商品搜索页
	
	商品详情页

2、开发时间

	一周

3、遇到的问题及解决方案

	未知宽度的定位元素基于父级水平居中

	    已知的水平居中的方法：

		1.有固定宽度的块元素margin左右auto

		2.内联元素与内联块元素居中，为父级元素设置text-align:center;

		3.固定宽度的定位元素使用left/right:50%;与margin-left/margin-right元素宽度一半的负值组合；

	    需求：

		定位与父元素底部 不确定宽度 水平居中

	    思路：	

		在2.基础上进行拓展，定位元素宽度由内容撑开但不支持父元素的text-align:center;

		支持text-align:center;的元素 - 内联块/内联元素；根据需求选择内联块元素，并取消定位

		需要定位在父元素底部，为其嵌套一个父元素，为该元素定位，width:100%;/*基于最大父级水平居中*/ text-align:center;



	父级固定宽度，子元素文字增多后，右上角的'hot'icon换行

	    解决方案：后台控制文字可输入的长度范围



	header盒子中标题与二维码的布局

	    需求：二维码距离右边距离等大 标题未知宽度，不是居中，但距离右侧二维码等宽

	    解决方案： 

		1.二维码右浮动并设置右边距；标题嵌套一个父级盒子设置剩余宽度，设置与二维码之间的固定间距，标题右浮动（拓展性不好，结构繁琐）

		2.html结构顺序更改，二维码，标题依次右浮动（更改了html书写顺序，不合原则）；

		3.与设计师协商修改合理布局的方式；



	IE6下input设置小icon背景时，输入的文字会出现在奇怪的位置

	    思路：限定input的范围

	    解决方案：给input嵌套一个盒子，小icon与input同级，基于父级定位；父级设置padding值预留出位置。

	

	IE6下浮动元素父级设置右边的padding值无效（内容仍然会进入padding区域）

	    原因：可能与IE版本有关；在其版本中对浮动元素与padding值之间的解析出现了其他表现；

	    解决方案：使用margin替代padding，预留出位置。



	IE6下同级上下结构元素,上面元素未浮动,下面元素浮动,父级wrap下面会出现与上面元素margin-bottom等大空隙；

	    解决：

		1.给浮动元素嵌套清除浮动盒子;

		2.去除div1的margin-bottom，给div2设置margin-top;

		3.同级元素最好都浮动;	



	商品详情页-商品介绍与店铺介绍栏中间的边框处理

	    需求：未知是否等高 边框贯穿容器

	    解决：为栏1设置右边框，栏2设置左边框，使两条边框重合；那么无论哪边的内容较多，中间的边框依然贯穿容器；



4、项目描述

	本项目支持标准浏览器、兼容IE6及以上版本IE浏览器；

	布局合理、严谨，按照从左到右从上到下的布局架构，拓展性强；

	布局内容结构化，使用与内容相关的命名，便于二次开发与修改；

	标签语义化，关爱浏览器；

	使用了CSS3样式，优化页面交互体验；

	使用了精灵图，优化浏览器的发送请求的次数；

	使用CSS样式写出的简单的小图标，减少对图片的使用；


	兼容性处理：

	IE低版本浏览器不支持html5新增标签，引入html5shiv.js做处理

	IE低版本浏览器不支持PNG图片，引入DD_belatedPNG_0.0.8a.js做处理

	IE低版本浏览器不支持css3新属性，采用优雅降级的方式；如：

		1）圆角以直角方式显示

		2）不支持transition延迟效果，直接显示

	IE低版本浏览器不支持a标签以外元素的hover效果，后期使用js处理



5、该项目的技术总结
	
	在制作精灵图的过程中，需要注意在各个图片预留出合适的位置，避免在使用过程中容器过大时显示出多余的部分，尤其在IE6下处理PNG图片出现像素偏差；

	项目页面内容很多，在布局的过程中，一定要注重内容结构化，避免由于内容过多混乱；

	在不同区块使用语义化标签；

	本次项目兼容IE6是非常有意义的过程，遇到的问题大多数是在兼容IE6时特有的问题；解决问题的过程：

		1. 使用调试工具查看出现问题的元素以及其父级、同级、及子集的样式，整合对兼容性问题的理解找出不合理的地方；

		2. 使用背景颜色占位的方式，查看元素占位；

		3. 使用结构或样式注释的方法，排除法查找问题；
	
	在项目过程中，尽量规避掉容易出现兼容性问题的地方，试图寻找其他可以实现同样效果的方法；

	开发过程中，已知兼容性问题的基础上可能还会遇到其他问题，在解决问题前要检查结构是否合理，有时问题产生于结构的不合理；















